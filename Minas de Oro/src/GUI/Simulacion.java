package GUI;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import minas.de.oro.Mina;
import minas.de.oro.Terreno;
import minas.de.oro.agente.AgenteMina;

public class Simulacion extends javax.swing.JFrame {

    /**
     * Creates new form Simulación
     */
    public Simulacion() {
        initComponents();
        
        // Se cambia el ícono de la aplicación
        this.setIconImage(new ImageIcon(getClass().getResource("/recursos/gold.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelMensajes = new javax.swing.JLabel();
        territorioPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Territorio");

        labelMensajes.setText("Bienvenido");
        jPanel1.add(labelMensajes);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        territorioPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        territorioPanel.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout territorioPanelLayout = new javax.swing.GroupLayout(territorioPanel);
        territorioPanel.setLayout(territorioPanelLayout);
        territorioPanelLayout.setHorizontalGroup(
            territorioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        territorioPanelLayout.setVerticalGroup(
            territorioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 467, Short.MAX_VALUE)
        );

        getContentPane().add(territorioPanel, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.GridLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/load.png"))); // NOI18N
        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/back.png"))); // NOI18N
        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        //todo esto es para que el panel que reperesenta el territorio se vaya actualizando
        //a medida de que se ejecutan los agentes (hilos)
        Runnable miRunnable = new Runnable() {
            public void run() {
                try {
                    Inicio.empezarSimulacion();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };
        Thread hilo = new Thread (miRunnable);
        hilo.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelMensajes;
    private javax.swing.JPanel territorioPanel;
    // End of variables declaration//GEN-END:variables
    
    
    public void colorearTerreno(Terreno terreno) {
        Color grisClaro = new Color(209, 139, 71);
        Color grisOscuro = new Color(255, 206, 158);
        for (int i = 0; i < terreno.getAncho()*terreno.getLargo(); i++) {
            JPanel square = new JPanel(new BorderLayout());
            territorioPanel.add(square);

            int row = (i / terreno.getAncho()) % 2;
            if (row == 0) {
                square.setBackground(i % 2 == 0 ? grisClaro : grisOscuro);
            } else {
                square.setBackground(i % 2 == 0 ? grisOscuro : grisClaro);
            }
        }
    }
    
    public void llenarTerreno(Terreno terreno) {
//        System.out.println("imprimiendo terreno de la GUI:");
//        terreno.imprimir();
//        synchronized(this){
            territorioPanel.setLayout(new java.awt.GridLayout(terreno.getLargo(), terreno.getAncho()));
            territorioPanel.removeAll();
//            territorioPanel.updateUI();
            colorearTerreno(terreno);
            actualizarTerreno(terreno);
//        }
    }
    
    public void actualizarTerreno(Terreno terreno) {
//        System.out.println("imprimiendo terreno de la GUI:");
//        terreno.imprimir();
        
        synchronized(this){
//            territorioPanel.updateUI();
            borrarTerreno(terreno);
            int cont=0;
            JLabel mina = new JLabel();
            JPanel panel = new JPanel();
            Mina minaTemporal;
            for (int i = 0; i < terreno.getLargo(); i++) {
                for (int j = 0; j < terreno.getAncho(); j++) {
                    minaTemporal = terreno.getMina(i, j);
                    mina = new JLabel();
                    if (minaTemporal.getTipo() == 1) {
                        mina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/gold.png")));
                    }
                    if (minaTemporal.getTipo() == 2) {
                        mina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/silver.png")));
                    }
                    if (minaTemporal.getTipo() == 3) {
                        mina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/bronze.png")));
                    }
                    //quitar icono a casillas vacias
                    if (minaTemporal.getTipo() == 0) {
                        mina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/vacio.png")));
                    }
                    if(minaTemporal.getTipo()>0){
                        mina.setToolTipText("cantidad: " + minaTemporal.getCantidad()
                                + ", idPropietario: " + minaTemporal.getIdPropietario());
                    }
                    if(minaTemporal.getIdPropietario()>0){
                        mina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/tool.png")));
                    }
                    if(minaTemporal.getIdPropietario()>0){
                        mina.setIconTextGap(0);
                        mina.setText(Integer.toString(minaTemporal.getIdPropietario()));
                    }
                    panel = (JPanel) territorioPanel.getComponent(cont);
                    panel.add(mina);
//                     panel.updateUI();
                    cont++;
                }
            }
//            this.paintAll(this.getGraphics());  
            this.revalidate();
        }
    }
    
    public void borrarTerreno(Terreno terreno) {
        int cont=0;
        JPanel panel = new JPanel();

        for (int i = 0; i < terreno.getLargo(); i++) {
            for (int j = 0; j < terreno.getAncho(); j++) {
                 panel = (JPanel)territorioPanel.getComponent(cont);
                 panel.removeAll();          
                 cont++;   
            }
        }
    }
    
    public void mostrarMensaje(String mensaje){
        labelMensajes.setText(mensaje);
    }

//    void agregarPosicion(Terreno terreno, int fila, int columna, int idAgente) {
//        
//    }
//
//    void eliminarPosicion(Terreno terreno, int fila, int columna, int idAgente) {
//        
//    }
}
